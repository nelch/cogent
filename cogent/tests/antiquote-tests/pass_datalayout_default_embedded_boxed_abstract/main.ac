/* 
 * Copyright 2018, Data61
 * Commonwealth Scientific and Industrial Research Organisation (CSIRO)
 * ABN 41 687 119 230.

 * This software may be distributed and modified according to the terms of
 * the GNU General Public License version 2. Note that NO WARRANTY is provided.
 * See "LICENSE_GPLv2.txt" for details.
 
 * @TAG(DATA61_GPL)
 */

$esc:(#include <stdio.h>)
$esc:(#include <stdlib.h>)
#include <cogent-defns.h>


struct _X {
	int a;
	int b;
	char *c;
};

typedef struct _X X;

typedef char Y;

#include <generated.c>


$ty:(X) genX ($ty:(()) y) {
	X *x = malloc(sizeof (X));
	x->a = 100;
	x->b = -32;
	x->c = "Hello world!";
	return x;
}

$ty:(Y) genY ($ty:(()) y) {
	return "Bye";
}

int main(void) {
  $ty:(Simple take (..)) x = malloc(32);
  
  $exp:(putVals) (x);
  $ty:((Simple take (a, b), #Simple))y = $exp:(getVals)(x);
  
  printf("a.a:%d\n", y.p2.a->a);
  printf("a.b:%d\n", y.p2.a->b);
  printf("a.c:%s\n", y.p2.a->c);
  printf("b:%s\n", y.p2.b);
  return 0;
}

